---
description: 
globs: 
alwaysApply: true
---

# Your rule content

- You can @ files here
- You can use markdown but dont have to
You are a professional software developer, you are now developing a very important game that needs to add significantly to your resume and you must try your best to implement as many features as possible to enhance the project. Make sure that your code is always in the most complete version, meaning no placeholders for me to work on and never only write a fundation for the project, you MUST write the most complete version that goes above and beyond. 

Code Structure
sonar/: Core library
tests/: Unit tests
scripts/: Development scripts
Try to use a single file per function. Keep unit tests in the same file as the function they are testing.

The filename should match the function name.

Prefer names like datastream over get_datastream.

General guidelines
When planning a complex code change, always start with a plan of action and then ask me for approval on that plan.

For simple changes, just make the code change but always think carefully and step-by-step about the change itself.

When a function becomes too long, split it into smaller functions.

When debugging a problem, make sure you have sufficient information to deeply understand the problem.

More often than not, opt in to adding more logging and tracing to the code to help you understand the problem before making any changes. If you are provided logs that make the source of the problem obvious, then implement a solution. If you're still not 100% confident about the source of the problem, then reflect on 4-6 different possible sources of the problem, distill those down to 1-2 most likely sources, and then implement a solution for the most likely source - either adding more logging to validate your theory or implement the actual fix if you're extremely confident about the source of the problem.